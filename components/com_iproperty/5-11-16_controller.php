<?php
/**
 * @version 3.3.3 2015-04-30
 * @package Joomla
 * @subpackage Intellectual Property
 * @copyright (C) 2009 - 2015 the Thinkery LLC. All rights reserved.
 * @license GNU/GPL see LICENSE.php
 */

defined('_JEXEC' ) or die('Restricted access');
jimport('joomla.application.component.controller');
jimport('joomla.error.log');

class ipropertyController extends JControllerLegacy
{
    var $log;
    var $debug;

    public function __construct()
    {
        $this->debug = false;
        if($this->debug) $this->log =JLog::getInstance('iproperty.log.php'); // create the logfile TODO: maybe add a debug switch to the admin to turn this off or on
        if($this->debug) $this->log->addEntry(array('COMMENT' => 'Constructing IProperty'));
        
        parent::__construct();       
    }
    
    public function display($cachable = false, $urlparams = false)
    {
        $app            = JFactory::getApplication();
        $document       = JFactory::getDocument();
        $settings       = ipropertyAdmin::config();
        $ipversion      = ipropertyAdmin::_getversion();
        ipropertyHTML::includeIpScripts();
        
        if( $settings->offline == 1 ){
            echo '
                <div align="center" class="ip-offline">
                    '.JHtml::_('image', 'components/com_iproperty/assets/images/iproperty.png', JText::_('COM_IPROPERTY_NO_ACCESS')).'
                    <div>' . $settings->offmessage . '</div>
                </div>';
        }else{
            // make sure bootstrap framework and css is loaded            
            JHtml::_('bootstrap.framework');
            
            if($settings->bootstrap_css){
                $lang = JFactory::getLanguage();
                $lang_direction = $lang->isRTL() ? 'rtl' : 'ltr';
                JHtml::_('bootstrap.loadCss', true, $lang_direction);
            }
            
            // Set predefined 'get' vars from menu item params
            $pdarray = array('cat', 'stype', 'city', 'locstate', 'province', 'county', 'region', 'country', 'beds', 'baths', 'price_low', 'price_high', 'filter_order', 'filter_order_dir', 'filter_order_Dir', 'hoa', 'reo', 'waterfront');
            foreach($pdarray as $pd){
                if($app->getParams()->get($pd) && !$app->input->getInt('ipquicksearch')){
                    $app->input->set($pd, $app->getParams()->get($pd), 'get');
                }
            }
            // end predefined vars           
        
            $cachable       = ($app->input->getInt('ipquicksearch')) ? false : true;
            $editid         = $app->input->getUint('id');
            $vName          = $app->input->getCmd('view', 'home');
            
            // add additional models for manage view
            if ($vName == 'manage')
            {
                $vType       = $document->getType();
                $view        = $this->getView($vName, $vType);

                switch($app->input->get('layout'))
                {
                    case 'proplist':
                        default:                            
                        $model = $this->getModel('proplist', 'ipropertymodel');
                        break;
                    case 'agentlist':
                        $model = $this->getModel('agentlist', 'ipropertymodel');
                        break;
                    case 'companylist':
                        $model = $this->getModel('companylist', 'ipropertymodel');
                        break;
                    case 'openhouselist':
                        $model = $this->getModel('openhouselist', 'ipropertymodel');
                        break;
                }
                $view->setModel($model, true);
            }
            
            $app->input->set('view', $vName);

            $safeurlparams = array('cat'=>'INT','id'=>'INT','cid'=>'ARRAY','limit'=>'INT','limitstart'=>'INT',
                'showall'=>'INT','return'=>'BASE64','search'=>'STRING','filter_order'=>'CMD','filter_order_dir'=>'CMD','filter_order_Dir'=>'CMD',
                'stype'=>'INT','print'=>'BOOLEAN','city'=>'STRING','locstate'=>'INT','province'=>'STRING','county'=>'STRING',
                'region'=>'STRING','country'=>'INT','beds'=>'INT','baths'=>'INT','price_low'=>'INT','price_high'=>'INT','sqft_low'=>'INT','sqft_high'=>'INT',
                'hoa'=>'INT','reo'=>'INT','waterfront'=>'INT','print'=>'BOOLEAN','lang'=>'CMD');

            if ($vName !== 'feed') echo '<!-- Generated by Intellectual Property v'.$ipversion['iproperty'].' by The Thinkery LLC. http://iproperty.thethinkery.net -->';
            parent::display($cachable, $safeurlparams);

            return $this;
        }
    }

    public function fetchfromrets(){
        ini_set('max_execution_time', 500000);
        //set_time_limit(1);
        // https://github.com/troydavisson/PHRETS --- Reference link
        $rets_login_url = 'http://retsgw.flexmls.com:80/rets2_1/Login';
        $rets_username = 'az.rets.usmr01b';
        $rets_password = 'puces-uronic23';

        // set your timezone
        date_default_timezone_set('America/New_York');

        // pull in the packages managed by Composer
        require_once(JPATH_SITE."/rets/vendor/autoload.php");

        // setup your configuration
        $config = new \PHRETS\Configuration;
        $config->setLoginUrl($rets_login_url)
                ->setUsername($rets_username)
                ->setPassword($rets_password)
                ->setRetsVersion('1.7.2');

        // get a session ready using the configuration
        $rets = new \PHRETS\Session($config);
        //echo "<pre>"; print_r($rets); exit;
        // make the first request
        $connect = $rets->Login();

        $system = $rets->GetSystemMetadata();
         //cho '<pre>';print_r($system);exit;
        //echo "Server Name: " . $system->getSystemDescription()."<br/><br/>";exit;

        //$results = $rets->Search("Property", "A", "(LIST_87=2010-04-01T00:00:00+)", array('Limit' => 2) ); 
        $check_cat = array('A','B','C','D','E','F');
        $category = JRequest::getvar('category');
        if(in_array($category,$check_cat)){ $cat = $category; } else { $cat = "";}
        $limit = JRequest::getvar('limit');
        if($limit >= 100){$limit=100;} else{$limit = $limit;}
        //echo $limit;exit;  
        $results = $rets->Search("Property","$cat" , "(LIST_87=2010-04-01T00:00:00+)", array('Limit' => $limit));
        //echo "<pre>"; print_r($results); exit;
        
        $properties = array();
        $keys = $results->getHeaders();

        $count = 0;

        $db = JFactory::getDbo(); 

        $delete_record = JRequest::getvar('delete');
        if(!empty($delete_record) && $delete_record== 1){
           $this->deleteRetsRecords($category); 
        }
        //echo '<pre>';print_r($results);echo '</pre>';exit;
        
        foreach ($results as $record) {
            
            $proamenities = array();
            array_push($proamenities, 0);

            //echo "<table border='1'>";
            for ($i=0; $i < count($keys); $i++) { 
                //echo "<tr><th align='left'>".$keys[$i]."</th><td>".$labels[$i]."</td><td>".$record[$keys[$i]]."</td></tr>";
                if($keys[$i] == "LIST_39") {
                    if(!empty($record[$keys[$i]])) { 
                        //$city = $record[$keys[$i]];
                        $cityq = $db->getQuery(true);
                        $cityq->select('id');
                        $cityq->from('`#__iproperty_cities` AS `city`');
                        //$cityq->join('inner', '`#__iproperty_agents` AS `ag` ON `map`.`user_id` = `ag`.`user_id`');
                        $cityq->where('`city`.`title` = \''.$record[$keys[$i]].'\'');
                        $db->setQuery($cityq);
                        $cityres = $db->loadObject();
                        //var_dump($cityres);exit;
                        $city_id = $cityres->id;
                        if(!empty($city_id)){
                            $city = $city_id;
                        } else {
                            $city = '';    
                        }
                    } else { 
                        $city = '';
                    }
                }
                $check_property_type = array('A'=>1,'B'=>2,'C'=>3,'D'=>4,'E'=>5,'F'=>6);
                $allowed = array($cat);
                $type = array_intersect_key($check_property_type, array_flip($allowed));
                $property_cat = $type[$cat];
                //this list_87 for created, published, modifies
                if($keys[$i] == "LIST_87") { if(!empty($record[$keys[$i]])) { 
                     $created_date = str_replace('T', ' ', $record[$keys[$i]]);
                } else { $created_date = ''; } }
                if($keys[$i] == "LIST_40") { if(!empty($record[$keys[$i]])) { 
                     if($record[$keys[$i]] == 'AZ'){
                        $locstate = 3921;
                     } else if($record[$keys[$i]] == 'OR'){
                        $locstate = 3962;
                     }
                } else { $locstate = ''; } }
                if($keys[$i] == "LIST_42") { if(!empty($record[$keys[$i]])) { 
                     if($record[$keys[$i]] == 'USA'){
                        $country = 231;
                     }
                } else { $country = ''; } }
                /*if($keys[$i] == "LIST_51") { if(!empty($record[$keys[$i]])) { 
                     $beds = round($record[$keys[$i]]);
                } else { $beds = ''; } }*/
                //number_format($number, 2, '.', '');
                if($keys[$i] == "LIST_5") { if(!empty($record[$keys[$i]])) { $agentid = $record[$keys[$i]]; } else { $agentid = ''; } }
                if($keys[$i] == "LIST_8") { if(!empty($record[$keys[$i]])) { $property_type = $record[$keys[$i]]; } else { $property_type = ''; } }
                if($keys[$i] == "LIST_9") { if(!empty($record[$keys[$i]])) { $dwelling_type = $record[$keys[$i]]; } else { $dwelling_type = ''; } }
                if($keys[$i] == "LIST_1") { if(!empty($record[$keys[$i]])) { $int_list_id = $record[$keys[$i]]; } else { $int_list_id = ''; } }
                if($keys[$i] == "LIST_29") { if(!empty($record[$keys[$i]])) { $map_code = $record[$keys[$i]]; } else { $map_code = ''; } }
                if($keys[$i] == "LIST_32") { if(!empty($record[$keys[$i]])) { $blog_num = $record[$keys[$i]]; } else { $blog_num = ''; } }
                if($keys[$i] == "LIST_33") { if(!empty($record[$keys[$i]])) { $street_compass = $record[$keys[$i]]; } else { $street_compass = ''; } }
                if($keys[$i] == "LIST_37") { if(!empty($record[$keys[$i]])) { $street_suffix = $record[$keys[$i]]; } else { $street_suffix = ''; } }
                if($keys[$i] == "LIST_58") { if(!empty($record[$keys[$i]])) { $buyer_commission = $record[$keys[$i]]; } else { $buyer_commission = ''; } }
                if($keys[$i] == "LIST_59") { if(!empty($record[$keys[$i]])) { $sub_agents = $record[$keys[$i]]; } else { $sub_agents = ''; } }
                if($keys[$i] == "LIST_60") { if(!empty($record[$keys[$i]])) { $other_commission = $record[$keys[$i]]; } else { $other_commission = ''; } }
                if($keys[$i] == "LIST_143") { if(!empty($record[$keys[$i]])) { $garage_type = $record[$keys[$i]]; } else { $garage_type = ''; } }
                if($keys[$i] == "LIST_73") { if(!empty($record[$keys[$i]])) { $pool = $record[$keys[$i]]; } else { $pool = ''; } }
                if($keys[$i] == "LIST_76") { if(!empty($record[$keys[$i]])) { $tax_year = $record[$keys[$i]]; } else { $tax_year = ''; } }
                if($keys[$i] == "LIST_78") { if(!empty($record[$keys[$i]])) { $public_remark = $record[$keys[$i]]; } else { $public_remark = ''; } }
                if($keys[$i] == "LIST_80") { if(!empty($record[$keys[$i]])) { $assessor_number = $record[$keys[$i]]; } else { $assessor_number = ''; } }
                if($keys[$i] == "LIST_85") { if(!empty($record[$keys[$i]])) { $marketing_name = $record[$keys[$i]]; } else { $marketing_name = ''; } }
                if($keys[$i] == "LIST_86") { if(!empty($record[$keys[$i]])) { $builder_name = $record[$keys[$i]]; } else { $builder_name = ''; } }
                if($keys[$i] == "LIST_92") { if(!empty($record[$keys[$i]])) { $tax_municipality = $record[$keys[$i]]; } else { $tax_municipality = ''; } }
                if($keys[$i] == "LIST_93") { if(!empty($record[$keys[$i]])) { $auction = $record[$keys[$i]]; } else { $auction = ''; } }
                if($keys[$i] == "LIST_101") { if(!empty($record[$keys[$i]])) { $planned_comm_name = $record[$keys[$i]]; } else { $planned_comm_name = ''; } }
                if($keys[$i] == "LIST_108") { if(!empty($record[$keys[$i]])) { $elementary_school = $record[$keys[$i]]; } else { $elementary_school = ''; } }
                if($keys[$i] == "LIST_109") { if(!empty($record[$keys[$i]])) { $middle_school = $record[$keys[$i]]; } else { $middle_school = ''; } }
                if($keys[$i] == "LIST_110") { if(!empty($record[$keys[$i]])) { $high_school = $record[$keys[$i]]; } else { $high_school = ''; } }
                if($keys[$i] == "LIST_111") { if(!empty($record[$keys[$i]])) { $elem_school_dist = $record[$keys[$i]]; } else { $elem_school_dist = ''; } }
                if($keys[$i] == "LIST_114") { if(!empty($record[$keys[$i]])) { $sqft_range = $record[$keys[$i]]; } else { $sqft_range = ''; } }
                if($keys[$i] == "LIST_118") { if(!empty($record[$keys[$i]])) { $comp_to_subagent = $record[$keys[$i]]; } else { $comp_to_subagent = ''; } }
                if($keys[$i] == "LIST_119") { if(!empty($record[$keys[$i]])) { $comp_to_buyer_broker = $record[$keys[$i]]; } else { $comp_to_buyer_broker = ''; } }
                if($keys[$i] == "LIST_124") { if(!empty($record[$keys[$i]])) { $assessor_book = $record[$keys[$i]]; } else { $assessor_book = ''; } }
                if($keys[$i] == "LIST_125") { if(!empty($record[$keys[$i]])) { $assessor_map = $record[$keys[$i]]; } else { $assessor_map = ''; } }
                if($keys[$i] == "LIST_126") { if(!empty($record[$keys[$i]])) { $assessor_parcel = $record[$keys[$i]]; } else { $assessor_parcel = ''; } }
                if($keys[$i] == "LIST_130") { if(!empty($record[$keys[$i]])) { $cross_street = $record[$keys[$i]]; } else { $cross_street = ''; } }
                if($cat == 'A'){
                    $custom_legal_key = "FEAT20080123203318529362000000";
                } else if($cat == 'B'){
                    $custom_legal_key = "FEAT20080204211931471021000000";
                }else if($cat == 'C'){
                    $custom_legal_key = "FEAT20080222174009973866000000";
                }else if($cat == 'D'){
                    $custom_legal_key = "FEAT20080207165832716619000000";
                }else if($cat == 'E'){
                    $custom_legal_key = "FEAT20080207170327130633000000";
                }else if($cat == 'F'){
                    $custom_legal_key = "FEAT20080207170630116587000000";
                }
                    if($keys[$i] == $custom_legal_key) { if(!empty($record[$keys[$i]])) { $legal_township = $record[$keys[$i]]; } else { $legal_township = ''; } }
                if($cat == 'A'){
                    $custom_range_key = "FEAT20080123203326455292000000";
                } else if($cat == 'B'){
                    $custom_range_key = "FEAT20080204211938974272000000";
                }else if($cat == 'C'){
                    $custom_range_key = "FEAT20080222174023344299000000";
                } else if($cat == 'D'){
                    $custom_range_key = "FEAT20080207165838587603000000";
                } else if($cat == 'E'){
                    $custom_range_key = "FEAT20080207170333803282000000";
                } else if($cat == 'F'){
                    $custom_range_key = "FEAT20080207170637898113000000";
                }
                    if($keys[$i] == $custom_range_key) { if(!empty($record[$keys[$i]])) { $legal_range = $record[$keys[$i]]; } else { $legal_range = ''; } }
                if($cat == 'A'){
                    $custom_section_key = "FEAT20080123203335955409000000";
                } else if($cat == 'B'){
                    $custom_section_key = "FEAT20080204211938974272000000";
                }else if($cat == 'C'){
                    $custom_section_key = "FEAT20080222173951418327000000";
                }else if($cat == 'D'){
                    $custom_section_key = "FEAT20080207165850278878000000";
                }else if($cat == 'E'){
                    $custom_section_key = "FEAT20080207170344208800000000";
                }else if($cat == 'F'){
                    $custom_section_key = "FEAT20080207170645142514000000";
                }
                    if($keys[$i] == $custom_section_key) { if(!empty($record[$keys[$i]])) { $legal_section = $record[$keys[$i]]; } else { $legal_section = ''; } }
                if($cat == 'A'){
                    $custom_lot_key = "FEAT20080123203731663536000000";
                } else if($cat == 'B'){
                    $custom_lot_key = "FEAT20080204212017122314000000";
                }else if($cat == 'C'){
                    $custom_lot_key = "FEAT20080204212516762546000000";
                }else if($cat == 'D'){
                    $custom_lot_key = "FEAT20080207165911829315000000";
                }else if($cat == 'E'){
                    $custom_lot_key = "FEAT20080207170405809083000000";
                }else if($cat == 'F'){
                    $custom_lot_key = "FEAT20080207170735671566000000";
                }
                    if($keys[$i] == "") { if(!empty($record[$keys[$i]])) { $legal_lot_num = $record[$keys[$i]]; } else { $legal_lot_num = ''; } }
                if($cat == 'A'){
                    $custom_rcrd_key = "FEAT20080123203441259293000000";
                } else if($cat == 'B'){
                    $custom_rcrd_key = "FEAT20080204212033044444000000";
                }else if($cat == 'C'){
                    $custom_rcrd_key = "FEAT20080204212528532575000000";
                }else if($cat == 'D'){
                    $custom_rcrd_key = "FEAT20080207165920125762000000";
                }else if($cat == 'F'){
                    $custom_rcrd_key = "FEAT20080207170748472299000000";
                }
                    if($keys[$i] == $custom_rcrd_key) { if(!empty($record[$keys[$i]])) { $legal_cnty_rcrd_bk_pg = $record[$keys[$i]]; } else { $legal_cnty_rcrd_bk_pg = ''; } }
                if($cat == 'A'){
                    $custom_hoa_key = "FEAT20070914205202933704000000";
                }else if($cat == 'C'){
                    $custom_hoa_key = "FEAT20120127220034630438000000";
                }
                    if($keys[$i] == $custom_hoa_key) { if(!empty($record[$keys[$i]])) { $association_hoa_fee_yes = $record[$keys[$i]]; } else { $association_hoa_fee_yes = ''; } }
                if($cat == 'A'){
                    $custom_fee_key = "FEAT20070914205229919954000000";
                }else if($cat == 'C'){
                    $custom_fee_key = "FEAT20071201025833384891000000";
                }
                    if($keys[$i] == $custom_fee_key) { if(!empty($record[$keys[$i]])) { $association_hoa_fee = $record[$keys[$i]]; } else { $association_hoa_fee = ''; } }
                if($cat == 'A'){
                    $custom_name_key = "FEAT20070914205338315648000000";
                }else if($cat == 'C'){
                    $custom_name_key = "FEAT20120127220235522942000000";
                }
                    if($keys[$i] == $custom_name_key) { if(!empty($record[$keys[$i]])) { $association_hoa_fee_name = $record[$keys[$i]]; } else { $association_hoa_fee_name = ''; } }
                if($cat == 'A'){
                    $custom_hoa2_key = "FEAT20110412225028756930000000";
                }else if($cat == 'C'){
                    $custom_hoa2_key = "FEAT20120127222801556165000000";
                }
                    if($keys[$i] == $custom_hoa2_key) { if(!empty($record[$keys[$i]])) { $association_hoa2_fee_yes = $record[$keys[$i]]; } else { $association_hoa2_fee_yes = ''; } }
                if($cat == 'A'){
                    $custom_hoa2fee_key = "FEAT20110412225501566841000000";
                }else if($cat == 'C'){
                    $custom_hoa2fee_key = "FEAT20120127222612720056000000";
                }
                    if($keys[$i] == $custom_hoa2fee_key) { if(!empty($record[$keys[$i]])) { $association_hoa2_fee = $record[$keys[$i]]; } else { $association_hoa2_fee = ''; } }
                if($cat == 'A'){
                    $custom_hoa2name_key = "FEAT20110412230614024897000000";
                }else if($cat == 'C'){
                    $custom_hoa2name_key = "FEAT20120127222516825843000000";
                }
                    if($keys[$i] == $custom_hoa2name_key) { if(!empty($record[$keys[$i]])) { $association_hoa2_fee_name = $record[$keys[$i]]; } else { $association_hoa2_fee_name = ''; } }
                if($keys[$i] == "FEAT20121130203556732237000000") { if(!empty($record[$keys[$i]])) { $association_hoa3_fee_yes = $record[$keys[$i]]; } else { $association_hoa3_fee_yes = ''; } }
                if($keys[$i] == "FEAT20121130203729521799000000") { if(!empty($record[$keys[$i]])) { $association_hoa3_fee = $record[$keys[$i]]; } else { $association_hoa3_fee = ''; } }
                if($keys[$i] == "FEAT20121130203819097748000000") { if(!empty($record[$keys[$i]])) { $association_hoa3_fee_name = $record[$keys[$i]]; } else { $association_hoa3_fee_name = ''; } }
                if($cat == 'A'){
                    $custom_basement_key = "FEAT20130513161043032254000000";
                } else if($cat == 'B'){
                    $custom_basement_key = "FEAT20130513161859632166000000";
                }
                    if($keys[$i] == $custom_key) { if(!empty($record[$keys[$i]])) { $basement_yes = $record[$keys[$i]]; } else { $basement_yes = ''; } }
                if($cat == 'A'){
                    $custom_separate_key = "FEAT20130513161604325096000000";
                } else if($cat == 'B'){
                    $custom_separate_key = "FEAT20130513161925161990000000";
                }
                    if($keys[$i] == $custom_separate_key) { if(!empty($record[$keys[$i]])) { $separate_den_office = $record[$keys[$i]]; } else { $separate_den_office = ''; } }
                if($keys[$i] == "FEAT20070914185721572556000000") { if(!empty($record[$keys[$i]])) { $kitchen_partial_full = $record[$keys[$i]]; } else { $kitchen_partial_full = ''; } }
                if($cat == 'A'){
                    $custom_parking_key = "FEAT20110510163155967817000000";
                } else if($cat == 'B'){
                    $custom_parking_key = "FEAT20110510165207213719000000";
                }
                    if($keys[$i] == $custom_parking_key) { if(!empty($record[$keys[$i]])) { $parking_space = $record[$keys[$i]]; } else { $parking_space = ''; } }
                if($cat == 'A'){
                    $custom_carpot_key = "FEAT20110510163434654648000000";
                } else if($cat == 'B'){
                    $custom_carpot_key = "FEAT20110510165242171220000000";
                }
                    if($keys[$i] == $custom_carpot_key) { if(!empty($record[$keys[$i]])) { $carpot_space = $record[$keys[$i]]; } else { $carpot_space = ''; } }
                if($cat == 'A'){
                    $custom_cover_key = "FEAT20110510163837118120000000";
                } else if($cat == 'B'){
                    $custom_cover_key = "FEAT20110510165328434394000000";
                }
                    if($keys[$i] == $custom_cover_key) { if(!empty($record[$keys[$i]])) { $total_cover_space = $record[$keys[$i]]; } else { $total_cover_space = ''; } }
                if($cat == 'A'){
                    $custom_phone_key = "FEAT20080404180341443455000000";
                } else if($cat == 'B'){
                    $custom_phone_key = "FEAT20080404205845999146000000";
                } else if($cat == 'C'){
                    $custom_phone_key = "FEAT20080404211507854818000000";
                } else if($cat == 'D'){
                    $custom_phone_key = "FEAT20080404213101600538000000";
                }else if($cat == 'F'){
                    $custom_phone_key = "FEAT20080407134907758005000000";
                }
                    if($keys[$i] == $custom_phone_key) { if(!empty($record[$keys[$i]])) { $agent_phone_num = $record[$keys[$i]]; } else { $agent_phone_num = ''; } }
                if($cat == 'A'){
                    $custom_bedroom_key = "GF20070913202500135794000000";
                } else if($cat == 'B'){
                    $custom_bedroom_key = "GF20071116203453881181000000";
                }
                    if($keys[$i] == $custom_bedroom_key) { if(!empty($record[$keys[$i]])) { $additional_bedroom = $record[$keys[$i]]; } else { $additional_bedroom = ''; } }
                if($cat == 'A'){
                    $custom_building_key = "GF20070913202500131719000000";
                } else if($cat == 'B'){
                    $custom_building_key = "GF20071116203454474848000000";
                } else if($cat == 'D'){
                    $custom_building_key = "GF20071119135700382116000000";
                } else if($cat == 'E'){
                    $custom_building_key = "GF20071119172525971739000000";
                }
                    if($keys[$i] == $custom_building_key) { if(!empty($record[$keys[$i]])) { $building_style = $record[$keys[$i]]; } else { $building_style = ''; } }
                if($cat == 'A'){
                    $custom_exterior_key = "GF20070913202500131436000000";
                } else if($cat == 'B'){
                    $custom_exterior_key = "GF20071116203455097260000000";
                }
                    if($keys[$i] == $custom_exterior_key) { if(!empty($record[$keys[$i]])) { $exterior_features = $record[$keys[$i]]; } else { $exterior_features = ''; } }
                if($cat == 'A'){
                    $custom_interior_key = "GF20070913202500135630000000";
                } else if($cat == 'B'){
                    $custom_interior_key = "GF20071116203455818652000000";
                }
                    if($keys[$i] == $custom_interior_key) { if(!empty($record[$keys[$i]])) { $interior_features = $record[$keys[$i]]; } else { $interior_features = ''; } }
                if($cat == 'A'){
                    $custom_fireplace_key = "GF20070913202500135759000000";
                } else if($cat == 'B'){
                    $custom_fireplace_key = "GF20071116203455656746000000";
                }
                    if($keys[$i] == $custom_fireplace_key) { if(!empty($record[$keys[$i]])) { $fireplace = $record[$keys[$i]]; } else { $fireplace = ''; } }
                if($cat == 'A'){
                    $custom_kitchen_key = "GF20070913202500131789000000";
                } else if($cat == 'B'){
                    $custom_kitchen_key = "GF20071116203457156956000000";
                }
                    if($keys[$i] == $custom_kitchen_key) { if(!empty($record[$keys[$i]])) { $kitchen_features = $record[$keys[$i]]; } else { $kitchen_features = ''; } }
                if($keys[$i] == "GF20121130191428826666000000") { if(!empty($record[$keys[$i]])) { $master_bedroom = $record[$keys[$i]]; } else { $master_bedroom = ''; } }
                if($keys[$i] == "GF20071116203457617516000000") { if(!empty($record[$keys[$i]])) { $master_bathroom = $record[$keys[$i]]; } else { $master_bathroom = ''; } }
                if($cat == 'A'){
                    $custom_special_key = "GF20080207202713312731000000";
                } else if($cat == 'B'){
                    $custom_special_key = "GF20100125194441384838000000";
                } else if($cat == 'C'){
                    $custom_special_key = "GF20080207202752466102000000";
                }
                    if($keys[$i] == $custom_special_key) { if(!empty($record[$keys[$i]])) { $special_listing_cond = $record[$keys[$i]]; } else { $special_listing_cond = ''; } }
                if($cat == 'A'){
                    $custom_technology_key = "GF20070913202500135662000000";
                } else if($cat == 'B'){
                    $custom_technology_key = "GF20071116203500475777000000";
                }   
                    if($keys[$i] == $custom_technology_key) { if(!empty($record[$keys[$i]])) { $technology = $record[$keys[$i]]; } else { $technology = ''; } }
                if($keys[$i] == "listing_member_shortid") { if(!empty($record[$keys[$i]])) { $listing_member_shortid = $record[$keys[$i]]; } else { $listing_member_shortid = ''; } }
                if($keys[$i] == "listing_office_shortid") { if(!empty($record[$keys[$i]])) { $listing_office_shortid = $record[$keys[$i]]; } else { $listing_office_shortid = ''; } }
                if($keys[$i] == "listing_member_name") { if(!empty($record[$keys[$i]])) { $listing_member_name = $record[$keys[$i]]; } else { $listing_member_name = ''; } }
                if($keys[$i] == "listing_office_name") { if(!empty($record[$keys[$i]])) { $listing_office_name = $record[$keys[$i]]; } else { $listing_office_name = ''; } }
                if($keys[$i] == "UNBRANDEDIDXVIRTUALTOUR") { if(!empty($record[$keys[$i]])) { $unbranded_virtual_tour = $record[$keys[$i]]; } else { $unbranded_virtual_tour = ''; } }
                if($keys[$i] == "picture_count") { if(!empty($record[$keys[$i]])) { $picture_count = $record[$keys[$i]]; } else { $picture_count = ''; } }
                if($keys[$i] == "LIST_24") { if(!empty($record[$keys[$i]])) { $low_price = $record[$keys[$i]]; } else { $low_price = ''; } }
                if($keys[$i] == "LIST_52") { if(!empty($record[$keys[$i]])) { $comp_for_sale = $record[$keys[$i]]; } else { $comp_for_sale = ''; } }
                if($keys[$i] == "LIST_68") { if(!empty($record[$keys[$i]])) { $interior_levels = $record[$keys[$i]]; } else { $interior_levels = ''; } }
                if($keys[$i] == "LIST_69") { if(!empty($record[$keys[$i]])) { $exterior_story = $record[$keys[$i]]; } else { $exterior_story = ''; } }
                if($keys[$i] == "LIST_91") { if(!empty($record[$keys[$i]])) { $vacation_rental_yes = $record[$keys[$i]]; } else { $vacation_rental_yes = ''; } }
                if($keys[$i] == "LIST_107") { if(!empty($record[$keys[$i]])) { $types = $record[$keys[$i]]; } else { $types = ''; } }
                if($keys[$i] == "FEAT20110412222540943628000000") { if(!empty($record[$keys[$i]])) { $rental_hoa_yes = $record[$keys[$i]]; } else { $rental_hoa_yes = ''; } }
                if($keys[$i] == "FEAT20071116192529063673000000") { if(!empty($record[$keys[$i]])) { $rental_hoa_name = $record[$keys[$i]]; } else { $rental_hoa_name = ''; } }
                if($keys[$i] == "FEAT20120127181504522660000000") { if(!empty($record[$keys[$i]])) { $rental_hoa_fee = $record[$keys[$i]]; } else { $rental_hoa_fee = ''; } }
                if($keys[$i] == "FEAT20130402192514025687000000") { if(!empty($record[$keys[$i]])) { $rental_property_sleeps = $record[$keys[$i]]; } else { $rental_property_sleeps = ''; } }
                if($keys[$i] == "FEAT20071116193640412686000000") { if(!empty($record[$keys[$i]])) { $rental_furnish = $record[$keys[$i]]; } else { $rental_furnish = ''; }}
                if($keys[$i] == "FEAT20071116193617886554000000") { if(!empty($record[$keys[$i]])) { $rental_floor_num = $record[$keys[$i]]; } else { $rental_floor_num = ''; }}
                if($keys[$i] == "LIST_49") { if(!empty($record[$keys[$i]])) { $lots_in_listing = $record[$keys[$i]]; } else { $lots_in_listing = ''; } }
                if($keys[$i] == "LIST_57") { if(!empty($record[$keys[$i]])) { $apx_total_acres = $record[$keys[$i]]; } else { $apx_total_acres = ''; } }
                if($keys[$i] == "LIST_72") { if(!empty($record[$keys[$i]])) { $apx_total_acres_name = $record[$keys[$i]]; } else { $apx_total_acres_name = ''; } }
                if($keys[$i] == "LIST_74") { if(!empty($record[$keys[$i]])) { $zoning = $record[$keys[$i]]; } else { $zoning = ''; } }
                if($keys[$i] == "LIST_95") { if(!empty($record[$keys[$i]])) { $apx_sqft_name = $record[$keys[$i]]; } else { $apx_sqft_name = ''; } }
                if($keys[$i] == "LIST_117") { if(!empty($record[$keys[$i]])) { $apx_sqft = $record[$keys[$i]]; } else { $apx_sqft = ''; } }
                if($keys[$i] == "GF20071117035540438309000000") { if(!empty($record[$keys[$i]])) { $elevation = $record[$keys[$i]]; } else { $elevation = ''; } }
                if($keys[$i] == "GF20071117035349289855000000") { if(!empty($record[$keys[$i]])) { $existing_land_use = $record[$keys[$i]]; } else { $existing_land_use = ''; } }
                if($keys[$i] == "GF20071117035530068525000000") { if(!empty($record[$keys[$i]])) { $land_features = $record[$keys[$i]]; } else { $land_features = ''; } }
                if($keys[$i] == "GF20071117035440502884000000") { if(!empty($record[$keys[$i]])) { $parcel_size = $record[$keys[$i]]; } else { $parcel_size = ''; } }
                if($keys[$i] == "GF20071117035428139715000000") { if(!empty($record[$keys[$i]])) { $potential_use = $record[$keys[$i]]; } else { $potential_use = ''; } }
                if($cat == 'C'){
                    $custom_restrictions_key = "GF20071117040305000417000000";
                } else if($cat == 'D'){
                    $custom_restrictions_key = "GF20071119150507770471000000";
                }else if($cat == 'E'){
                    $custom_restrictions_key = "GF20071119172537415836000000";
                }
                    if($keys[$i] == $custom_restrictions_key) { if(!empty($record[$keys[$i]])) {
                 $use_restrictions = str_replace("'", "", $record[$keys[$i]]); } else { $use_restrictions = ''; } }
                //str_replace("'", "", $your_string);
                if($keys[$i] == "GF20071117035412533196000000") { if(!empty($record[$keys[$i]])) { $zoned_presently = $record[$keys[$i]]; } else { $zoned_presently = ''; } }
                if($cat == 'D'){
                    $custom_construction_key = "GF20071119135700713497000000";
                } else if($cat == 'E'){
                    $custom_construction_key = "GF20071119172526400141000000";
                }else if($cat == 'F'){
                    $custom_construction_key = "GF20071121011754872078000000";
                }
                    if($keys[$i] == $custom_construction_key) { if(!empty($record[$keys[$i]])) { $construction = $record[$keys[$i]]; } else { $construction = ''; } }
                if($cat == 'D'){
                    $custom_current_key = "GF20071119150611106648000000";
                } else if($cat == 'E'){
                    $custom_current_key = "GF20071119172526560972000000";
                }
                    if($keys[$i] == $custom_current_key) { if(!empty($record[$keys[$i]])) { $current_use = $record[$keys[$i]]; } else { $current_use = ''; } }
                if($cat == 'D'){
                    $custom_envi_key = "GF20071119150518403713000000";
                } else if($cat == 'E'){
                    $custom_envi_key = "GF20071119172528895341000000";
                }
                    if($keys[$i] == $custom_envi_key) { if(!empty($record[$keys[$i]])) { $environmental = $record[$keys[$i]]; } else { $environmental = ''; } }
                if($cat == 'D'){
                    $custom_stories_key = "GF20071119150620828281000000";
                } else if($cat == 'E'){
                    $custom_stories_key = "GF20071119172536579654000000";
                }
                    if($keys[$i] == $custom_stories_key) { if(!empty($record[$keys[$i]])) { $stories = $record[$keys[$i]]; } else { $stories = ''; } }
                if($cat == 'E'){
                    $custom_pays_key = "GF20071119172524344039000000";
                } else if($cat == 'F'){
                    $custom_pays_key = "GF20071121011800075877000000";
                }
                if($cat == 'F'){
                    $custom_ami_key = "GF20071121011753771268000000";
                } else if($cat == 'E'){
                    $custom_ami_key = "GF20071119172525590600000000";
                } else if($cat == 'D'){
                    $custom_ami_key = "GF20071119150727236413000000";
                }
                    if($keys[$i] == $custom_ami_key) { if(!empty($record[$keys[$i]])) { $ami = $record[$keys[$i]]; } else { $ami = ''; } }
                                

                if($keys[$i] == $custom_pays_key) { if(!empty($record[$keys[$i]])) { $tenant_pays = $record[$keys[$i]]; } else { $tenant_pays = ''; } }
                /*if($keys[$i] == "GF20071121011753771268000000") { if(!empty($record[$keys[$i]])) { $appliances_included = $record[$keys[$i]]; } else { $appliances_included = ''; } }*/
                 if($keys[$i] == "GF20071121011759800083000000") { if(!empty($record[$keys[$i]])) { $sale_includes = $record[$keys[$i]]; } else { $sale_includes = ''; } } 
                if($keys[$i] == "LIST_67") { if(!empty($record[$keys[$i]])) { $baths = $record[$keys[$i]]; } else { $baths = ''; } } 
                if($keys[$i] == "LIST_66") { if(!empty($record[$keys[$i]])) { $beds = $record[$keys[$i]]; } else { $beds = ''; } }
                if($keys[$i] == "LIST_53") { if(!empty($record[$keys[$i]])) { $yearbuilt = $record[$keys[$i]]; } else { $yearbuilt = ''; } }
                if($keys[$i] == "LIST_47") { if(!empty($record[$keys[$i]])) { $longitude = $record[$keys[$i]]; } else { $longitude = ''; } }
                if($keys[$i] == "LIST_46") { if(!empty($record[$keys[$i]])) { $latitude = $record[$keys[$i]]; } else { $latitude = ''; } }
                if($keys[$i] == "LIST_43") { if(!empty($record[$keys[$i]])) { $postcode = $record[$keys[$i]]; } else { $postcode = ''; } }
                if($keys[$i] == "LIST_37") { if(!empty($record[$keys[$i]])) { $street2 = $record[$keys[$i]]; } else { $street2 = ''; } }
                if($keys[$i] == "LIST_34") { if(!empty($record[$keys[$i]])) { $street = $record[$keys[$i]]; } else { $street = ''; } }
                if($keys[$i] == "LIST_31") { if(!empty($record[$keys[$i]])) { $street_num = $record[$keys[$i]]; } else { $street_num = ''; } }
                if($keys[$i] == "LIST_25") { if(!empty($record[$keys[$i]])) { $price = $record[$keys[$i]]; } else { $price = ''; } }
                if($keys[$i] == "LIST_22") { if(!empty($record[$keys[$i]])) { $price2 = $record[$keys[$i]]; } else { $price2 = ''; } }
                if($keys[$i] == "GF20070914134222636466000000") { if(!empty($record[$keys[$i]])) { $description = $record[$keys[$i]]; } else { $description = ''; } }

                if($keys[$i] == "LIST_105") { if(!empty($record[$keys[$i]])) { $mls_id = $record[$keys[$i]]; } else { $mls_id = ''; } }
                if($keys[$i] == "LIST_133") { if(!empty($record[$keys[$i]])) { $picture_count = $record[$keys[$i]]; } else { $subdivision = ''; } }
                if($keys[$i] == "LIST_113") { if(!empty($record[$keys[$i]])) { $province = $record[$keys[$i]]; } else { $province = ''; } }
                if($keys[$i] == "LIST_41") { if(!empty($record[$keys[$i]])) { $county = $record[$keys[$i]]; } else { $county = ''; } }
                if($keys[$i] == "LIST_35") { if(!empty($record[$keys[$i]])) { $total_units = $record[$keys[$i]]; } else { $total_units = ''; } }
                if($keys[$i] == "LIST_75") { if(!empty($record[$keys[$i]])) { $tax = $record[$keys[$i]]; } else { $tax = ''; } }
                if($keys[$i] == "LIST_48") { if(!empty($record[$keys[$i]])) { $sqft = $record[$keys[$i]]; } else { $sqft = ''; } }
                if($keys[$i] == "LIST_56") { if(!empty($record[$keys[$i]])) { $lotsize = $record[$keys[$i]]; } else { $lotsize = ''; } }
                if($keys[$i] == "GF20070914134031105159000000") { if(!empty($record[$keys[$i]])) { $heat = $record[$keys[$i]]; } else { $heat = ''; } }
                if($keys[$i] == "GF20070914134018021136000000") { if(!empty($record[$keys[$i]])) { $cool = $record[$keys[$i]]; } else { $cool = ''; } }
                if($keys[$i] == "FEAT20110510163155967817000000") { if(!empty($record[$keys[$i]])) { $garage_size = $record[$keys[$i]]; } else { $garage_size = ''; } }
                if($keys[$i] == "GF20070914134004605295000000") { if(!empty($record[$keys[$i]])) { $roof = $record[$keys[$i]]; } else { $roof = ''; } }
                if($keys[$i] == "LIST_112") { if(!empty($record[$keys[$i]])) { $school_district = $record[$keys[$i]]; } else { $school_district = ''; } }


                //echo "<pre>"; print_r($re);
                
                // amenities
                if($keys[$i] == "GF20070914134205261619000000") { if(!empty($record[$keys[$i]])) { array_push($proamenities, 25); } }
                if($keys[$i] == "FEAT20110510163155967817000000") { if(!empty($record[$keys[$i]])) { array_push($proamenities, 4); } }
                if($keys[$i] == "GF20070913202500135759000000") { if(!empty($record[$keys[$i]])) { array_push($proamenities, 5); } }
                if($keys[$i] == "GF20070913202500135494000000") { if(!empty($record[$keys[$i]])) { array_push($proamenities, 34); } }
                if($keys[$i] == "GF20070913202500135727000000") { if(!empty($record[$keys[$i]])) { array_push($proamenities, 3); } }
                if($keys[$i] == "GF20100909235843952771000000") { if(!empty($record[$keys[$i]])) { array_push($proamenities, 23); } }
                if($keys[$i] == "GF20070914134031105159000000") { if(!empty($record[$keys[$i]])) { array_push($proamenities, 84); } }
                if($keys[$i] == "GF20070914134018021136000000") { if(!empty($record[$keys[$i]])) { array_push($proamenities, 37); } }
                if($keys[$i] == "GF20070913202500135598000000") { if(!empty($record[$keys[$i]])) { array_push($proamenities, 87); } }
                
                if($keys[$i] == 'LIST_1') { if(!empty($record[$keys[$i]])) { $photos = $rets->GetObject("Property", "640x480", $record[$keys[$i]], "*", 1); /*echo '<pre>';print_r($photos);echo '</pre>';*/ } else { $photos = ''; } }
                //echo '<pre>';print_r($photos);echo '</pre>';
            }

            
            // echo "<pre>"; print_r($ami);
            $re = explode(',',$ami);
            if(count($re) > 0){
                for ($i=0; $i < count($re); $i++) {
                    $ami = $db->getQuery(true);
                    $ami->select('id');
                    $ami->from('#__iproperty_amenities');
                    $ami->where($db->quoteName('title') . ' = '. $db->quote($re[$i]));
                    $db->setQuery($ami);
                    $ami_res = $db->loadObject();
                 
                    if(!empty($ami_res->id))array_push($proamenities, $ami_res->id);
                }
                //echo "<pre>"; print_r($proamenities);
            }
            // Insert columns.
            $columns = array('stype', 'country', 'locstate', 'city', 'baths','comp_for_sale', 'beds', 'yearbuilt', 'longitude', 'latitude', 'postcode', 'street2', 'street', 'street_num' ,'cross_street', 'blog_num', 'street_compass', 'street_suffix', 'stype_freq', 'price', 'price2','low_price','access', 'from_rets', 'description', 'mls_id', 'int_list_id','agentid', 'property_type','subdivision', 'province', 'county', 'total_units', 'tax', 'tax_year','tax_municipality', 'sqft', 'sqft_range', 'lotsize', 'heat', 'cool', 'garage_type', 'garage_size', 'pool', 'zoning', 'roof', 'school_district', 'elem_school_dist', 'created_by', 'created', 'modified', 'publish_up','dwelling_type','map_code','buyer_commission','sub_agents','other_commission','public_remark','assessor_number','marketing_name','builder_name','auction','planned_comm_name','elementary_school','middle_school','high_school','comp_to_buyer_broker','comp_to_subagent','assessor_book','assessor_map','assessor_parcel','legal_township','legal_range','legal_section','legal_lot_num','legal_cnty_rcrd_bk_pg','association_hoa_fee_yes','association_hoa_fee','association_hoa_fee_name','association_hoa2_fee_yes','association_hoa2_fee','association_hoa2_fee_name','association_hoa3_fee_yes','association_hoa3_fee','association_hoa3_fee_name','basement_yes','separate_den_office','kitchen_partial_full','parking_space','carpot_space','total_cover_space','agent_phone_num','additional_bedroom','building_style','exterior_features','interior_features','fireplace','kitchen_features','master_bedroom','master_bathroom','special_listing_cond','technology','listing_member_shortid','listing_office_shortid','listing_member_name','listing_office_name','unbranded_virtual_tour','picture_count','interior_levels','exterior_story','vacation_rental_yes','types','rental_hoa_yes','rental_hoa_name','rental_hoa_fee','rental_property_sleeps','rental_furnish','rental_floor_num','lots_in_listing','apx_total_acres','apx_total_acres_name','apx_sqft_name','apx_sqft','elevation','existing_land_use','land_features','parcel_size','potential_use','use_restrictions','zoned_presently','construction','current_use','environmental','stories','tenant_pays','sale_includes');
             
            // Insert values.
            //echo "<pre>"; print_r($columns); exit;
            $values = array(1, $db->quote($country), $db->quote($locstate), $db->quote($city), $db->quote($baths), $db->quote($comp_for_sale), $db->quote($beds), $db->quote($yearbuilt), $db->quote($longitude), $db->quote($latitude), $db->quote($postcode), $db->quote($street2), $db->quote($street), $db->quote($street_num), $db->quote($cross_street), $db->quote($blog_num), $db->quote($street_compass), $db->quote($street_suffix), $db->quote('SqFt'), $db->quote($price), $db->quote($price2),$db->quote($low_price), 1, 1, $db->quote($description), $db->quote($mls_id), $db->quote($int_list_id),$db->quote($agentid),$db->quote($property_type), $db->quote($subdivision), $db->quote($province), $db->quote($county), $db->quote($total_units), $db->quote($tax),$db->quote($tax_year),$db->quote($tax_municipality), $db->quote($sqft), $db->quote($sqft_range), $db->quote($lotsize), $db->quote($heat), $db->quote($cool), $db->quote($garage_type), $db->quote($garage_size), $db->quote($pool),$db->quote($zoning), $db->quote($roof), $db->quote($school_district), $db->quote($elem_school_dist), 785, $db->quote($created_date), $db->quote($created_date), $db->quote($created_date), $db->quote($dwelling_type), $db->quote($map_code), $db->quote($buyer_commission), $db->quote($sub_agents), $db->quote($other_commission), $db->quote($public_remark), $db->quote($assessor_number), $db->quote($marketing_name), $db->quote($builder_name), $db->quote($auction), $db->quote($planned_comm_name), $db->quote($elementary_school), $db->quote($middle_school), $db->quote($high_school), $db->quote($comp_to_buyer_broker),$db->quote($comp_to_subagent), $db->quote($assessor_book), $db->quote($assessor_map), $db->quote($assessor_parcel), $db->quote($legal_township), $db->quote($legal_range), $db->quote($legal_section), $db->quote($legal_lot_num),$db->quote($legal_cnty_rcrd_bk_pg), $db->quote($association_hoa_fee_yes), $db->quote($association_hoa_fee), $db->quote($association_hoa_fee_name), $db->quote($association_hoa2_yes),$db->quote($association_hoa2_fee), $db->quote($association_hoa2_fee_name),$db->quote($association_hoa3_fee_yes),$db->quote($association_hoa3_fee),$db->quote($association_hoa3_fee_name),$db->quote($basement_yes),$db->quote($separate_den_office), $db->quote($kitchen_partial_full), $db->quote($parking_space), $db->quote($carpot_space), $db->quote($total_cover_space), $db->quote($agent_phone_num), $db->quote($additional_bedroom), $db->quote($building_style),$db->quote($exterior_features),$db->quote($interior_features),$db->quote($fireplace),$db->quote($kitchen_features),$db->quote($master_bedroom),$db->quote($master_bathroom),$db->quote($special_listing_cond),$db->quote($technology),$db->quote($listing_member_shortid),$db->quote($listing_office_shortid),$db->quote($listing_member_name),$db->quote($listing_office_name),$db->quote($unbranded_virtual_tour),$db->quote($picture_count),$db->quote($interior_levels),$db->quote($exterior_story),$db->quote($vacation_rental_yes),$db->quote($types),$db->quote($rental_hoa_yes),$db->quote($rental_hoa_name),$db->quote($rental_hoa_fee),$db->quote($rental_property_sleeps),$db->quote($rental_furnish),$db->quote($rental_floor_num),$db->quote($lots_in_listing),$db->quote($apx_total_acres),$db->quote($apx_total_acres_name),$db->quote($apx_sqft_name),$db->quote($apx_sqft),$db->quote($elevation),$db->quote($existing_land_use),$db->quote($land_features),$db->quote($parcel_size),$db->quote($potential_use),$db->quote($use_restrictions),$db->quote($zoned_presently),$db->quote($construction),$db->quote($current_use),$db->quote($environmental),$db->quote($stories),$db->quote($tenant_pays),$db->quote($sale_includes));
            //print_r($values);exit;
            // Prepare the insert query.
            $db = JFactory::getDbo(); 
            $se = $db->getQuery(true);
                $se
                ->select(array('DISTINCT id'))
                ->from($db->quoteName('#__iproperty'))
                ->where($db->quoteName('mls_id') . ' =' .$db->quote($mls_id))
                ->where($db->quoteName('from_rets'). ' = '. 1)
                ->where($db->quoteName('locstate'). ' = '. 3921)
                ->order($db->quoteName('id') . ' DESC');
                $db->setQuery($se);
                
                $selectresults = $db->loadObject();
                //var_dump($selectresults); exit;
                
                if(empty($selectresults)){

            $query = $db->getQuery(true);
            $query
                ->insert($db->quoteName('#__iproperty'))
                ->columns($db->quoteName($columns))
                ->values(implode(',', $values));
             
            // Set the query using our newly populated query object and execute it.
            $db->setQuery($query);
            //echo $query; exit;
            $db->execute();
            $propId = $db->insertid();

            if(count($proamenities) > 0){

                foreach ($proamenities as $pro) {
                    
                    $midquery = $db->getQuery(true);
                    $midcolumns = array('prop_id' , 'cat_id' , 'amen_id');
                    $midvalues = array($db->quote($propId), $property_cat, $db->quote($pro));
                    $midquery
                        ->insert($db->quoteName('#__iproperty_propmid'))
                        ->columns($db->quoteName($midcolumns))
                        ->values(implode(',', $midvalues));
                    // Set the query using our newly populated query object and execute it.
                    $db->setQuery($midquery);
                    $db->execute();
                }

            } else {
                $midquery = $db->getQuery(true);
                $midcolumns = array('prop_id' , 'cat_id' , 'amen_id');
                $midvalues = array($db->quote($propId), $property_cat, 0);
                $midquery
                    ->insert($db->quoteName('#__iproperty_propmid'))
                    ->columns($db->quoteName($midcolumns))
                    ->values(implode(',', $midvalues));
                    //echo $midvalues;
                // Set the query using our newly populated query object and execute it.
                $db->setQuery($midquery);
                $db->execute();
            }
            //custom viral
            $super = $db->getQuery(true);
            $super->select('id');
            $super->from('`#__user_usergroup_map` AS `map`');
            $super->join('inner', '`#__iproperty_agents` AS `ag` ON `map`.`user_id` = `ag`.`user_id`');
            $super->where('`map`.`group_id` = 8');
            $super->where('`ag`.`agent_type` = 1');
            $db->setQuery($super);
            $res = $db->loadObject();
            if(count($proamenities) > 0){
                    $agquery = $db->getQuery(true);
                    $agcolumns = array('prop_id' , 'agent_id' , 'agent_type');
                    $agvalues = array($db->quote($propId), $res->id, 1);
                    $agquery
                        ->insert($db->quoteName('#__iproperty_agentmid'))
                        ->columns($db->quoteName($agcolumns))
                        ->values(implode(',', $agvalues));
                    // Set the query using our newly populated query object and execute it.
                    $db->setQuery($agquery);
                    $db->execute();
            }

               

            //custom viral end

            if(count($photos) > 1){
                $ordering = 0;
                foreach ($photos as $photo)
                {
                    $photo = (array)$photo;
                    $data = array();
                    
                    //echo '<pre>';print_r($photo);echo '</pre>';
                    $elemI = 0;
                    foreach ($photo as $key => $value) {
                        //var_dump($value);
                        //$data[] = $value;
                        $elemI++;
                        $title = '';
                        $file_ext = '';
                        $path = '';
                        $fname = '';
                        if($elemI == 5){
                            //echo '<pre>';var_dump(basename($value, ".").PHP_EOL);echo '</pre>';
                            $filenames = explode('.', basename($value, ".").PHP_EOL);
                            $fileI = 0;
                            foreach ($filenames as $filename) {
                                $fileI++;
                                if($fileI == count($filenames)){
                                    $type = trim('.'.$filename);
                                } else {
                                    $fname .= $filename; 
                                } 
                                
                            }

                            $slashes = explode('/', $value);
                            $slashI = 0;
                            foreach ($slashes as $slash) {
                                $slashI++;
                                if($slashI < count($slashes)){
                                    $path .= $slash.'/';    
                                } 
                                
                            }

                            //var_dump($fname);var_dump($type);var_dump($path);var_dump($value);
                        } else if($elemI == 6){
                            $title = $value;
                            //var_dump($value); 
                        }

                        //var_dump($fname);var_dump($type);var_dump($path);var_dump($value);
                        //var_dump($value);
                        //echo '<br>';
                        
                        if(!empty($fname) && !empty($type) && !empty($path)){

                            $imgquery = $db->getQuery(true);
                            $imgcolumns = array('propid', 'title', 'fname', 'type', 'remote', 'path', 'owner', 'ordering', 'state');
                            $imgvalues = array($db->quote($propId), $db->quote($title), $db->quote($fname), $db->quote($type), 1, $db->quote($path), 785, $db->quote($ordering), 1);
                            $imgquery
                                ->insert($db->quoteName('#__iproperty_images'))
                                ->columns($db->quoteName($imgcolumns))
                                ->values(implode(',', $imgvalues));
                             
                            // Set the query using our newly populated query object and execute it.
                            $db->setQuery($imgquery);
                            $db->execute(); 
                            //break;  
                        }

                    }

                    $ordering++;

                    /*$listing = $data[1];
                    $number = $data[2];

                    echo "<pre>";print_r($listing);
                    if ($data[4]) {
                            file_put_contents("image-{$listing}-{$number}.jpg", $data[4]);
                    }
                    else {
                            echo "here in else";
                    }*/
                }
            }
        }

            //exit;

            $count++;
            //break;
            //echo "</table><br/>#######################################################################################<br/>";
        }

        if($count > 1){
            $message =  $count.' Properties Fetched Successfully';
        } else {
            $message =  $count.' Property Fetched Successfully';
        }

        $application = JFactory::getApplication();
        $application->enqueueMessage($message);

        return true;
    }

    public function deleteRetsRecords($category=null){


        $check_cat = array('A','B','C','D','E','F');
        if(in_array($category,$check_cat)){ $cat = $category; } else { $cat = "";}

        $check_property_type = array('A'=>1,'B'=>2,'C'=>3,'D'=>4,'E'=>5,'F'=>6);
        $allowed = array($cat);
        $type = array_intersect_key($check_property_type, array_flip($allowed));
        $property_cat = $type[$cat];
        //echo $property_cat;exit;
        //echo "<pre>"; print_r($selectresults);exit;
        $db = JFactory::getDbo(); 
        $query = $db->getQuery(true);
            $query
            ->select(array('DISTINCT a.id'))
            ->from($db->quoteName('#__iproperty', 'a'))
            ->join('INNER', $db->quoteName('#__iproperty_propmid', 'b') . ' ON (' . $db->quoteName('a.id') . ' = ' . $db->quoteName('b.prop_id') . ')')
            ->where($db->quoteName('b.cat_id') . ' =' .$db->quote($property_cat))
            ->where($db->quoteName('a.from_rets') . ' =' . 1)
            ->where($db->quoteName('a.locstate'). ' = '. 3921)
            ->order($db->quoteName('a.id') . ' ASC');
            $db->setQuery($query);
            $selectresults = $db->loadObjectList();
            //echo "<pre>"; print_r($selectresults); exit;
        //
        /*$db = JFactory::getDbo(); 

        $selectquery = $db->getQuery(true);
        $selectquery->select('id');
        $selectquery->from($db->quoteName('#__iproperty'));
        $selectquery->where($db->quoteName('from_rets') . ' = '. 1);
        $db->setQuery($selectquery);
        $selectresults = $db->loadObjectList();*/

        $selectIds = array();
        foreach ($selectresults as $sresult) {
            array_push($selectIds, $sresult->id);
        }

        if(count($selectIds) > 0){

            $selectIdsForWhere = implode(',', $selectIds);

            $delete_prop = $db->getQuery(true);
            $db->setQuery('DELETE FROM `#__iproperty` WHERE `id` IN ('.$selectIdsForWhere.')');
            $db->execute();
            
            $delete_propmid = $db->getQuery(true);
            $db->setQuery('DELETE FROM `#__iproperty_propmid` WHERE `prop_id` IN ('.$selectIdsForWhere.')');
            $db->execute();

            $delete_propmid = $db->getQuery(true);
            $db->setQuery('DELETE FROM `#__iproperty_images` WHERE `propid` IN ('.$selectIdsForWhere.')');
            $db->execute();

            $delete_propmid = $db->getQuery(true);
            $db->setQuery('DELETE FROM `#__iproperty_agentmid` WHERE `prop_id` IN ('.$selectIdsForWhere.')');
            //$db->execute();

        }

        $count = count($selectIds);
        if($count < 1){
            $message =  'No Properties to Delete';
        } else if(count($selectIds) > 1){
            $message =  $count.' Properties Deleted Successfully';
        } else {
            $message =  $count.' Property Deleted Successfully';
        }

        $application = JFactory::getApplication();
        $application->enqueueMessage($message);

        return true;
    }
    public function fetchoregonfromrets(){
        require_once("phrets.php");

        $limit = JRequest::getvar('limit');
        $insertPropertyTotal = 0;
        $no_of_prop = $limit;
        
        $rets = new phRETS;
        $rets_login_url = "http://rets.rmlsweb.com:6103/rets/login";
        $rets_username = "DS04US50";
        $rets_password = "DS0807US";

        $connect = $rets->Connect($rets_login_url, $rets_username, $rets_password);
        //var_dump($connect); exit;
        if (!$connect) {
            print_r($rets->Error());
        } else {
            $query = "(DateList=2015-03-02)";
        if($_REQUEST['query']){
            $query = $_REQUEST['query'];
        }
        $check_cat = array('A'=>'Residential','C'=>'LotsAndLand','D'=>'Common','F'=>'MultiFamily');
        $category = JRequest::getvar('category');
        if(!empty(array_key_exists($category,$check_cat))){
            $cat = $check_cat[$category];
            //echo $cat; exit;
        } else {
            $application = JFactory::getApplication();
            $application->enqueueMessage('Please enter category');
        }
        $check_property_type = array('A'=>1,'C'=>3,'D'=>4,'F'=>6);
        $allowed = array($category);

        $type = array_intersect_key($check_property_type, array_flip($allowed));
        $property_cat = $type[$category];

        $delete_record = JRequest::getvar('delete');
        if(!empty($delete_record) && $delete_record== 1){
           $this->deleteOregonretsRecords($category); 
        }
        /*$types = $rets->GetMetadataTypes();
        foreach ($types as $type) {
            if($type['Resource'] == "Property"){
                foreach ($type['Data'] as $data) {
                    $search = $rets->SearchQuery($type['Resource'],$cat,$query);
                    $listing = $rets->FetchRow($search);
                    echo "<pre>"; print_r($listing); 
                }
            }
        }*/

        $types = $rets->GetMetadataTypes();
        foreach ($types as $type) {
            if($type['Resource'] == "Property"){
                foreach ($type['Data'] as $data) {
                    $fields = $rets->GetMetadataTable($type['Resource'], $data['VisibleName']);
                    if($data['VisibleName']==$cat){
                        $search = $rets->SearchQuery($type['Resource'],$cat,$query);
                        $count = 0;

                        
                        while ($count++ < $no_of_prop && $rets->TotalRecordsFound() > 0) {
                                $listing = $rets->FetchRow($search);
                                //echo "<pre>"; print_r($listing);
                                $ordering = 0;
                                foreach ($fields as $field) {
                                    if($field['SystemName'] == "ListingID") { if(!empty($listing[$field['SystemName']])) { $agentid = $listing[$field['SystemName']]; } else { $agentid = ''; } }
                                    if($field['SystemName'] == "Latitude") { if(!empty($listing[$field['SystemName']])) { $latitude = $listing[$field['SystemName']]; } else { $latitude = ''; } }
                                    if($field['SystemName'] == "Longitude") { if(!empty($listing[$field['SystemName']])) { $longitude = $listing[$field['SystemName']]; } else { $longitude = ''; } }
                                    if($field['SystemName'] == "State") { if(!empty($listing[$field['SystemName']])) {
                                        if($listing[$field['SystemName']] == 'OR'){
                                            $locstate = 3962;
                                        }
                                    } else { $locstate = ''; } }
                                    if($field['SystemName'] == "City") { if(!empty($listing[$field['SystemName']])) {
                                        $get_city = trim(reset(explode(',',$listing[$field['SystemName']])));
                                            $db = JFactory::getDbo();
                                            $cityq = $db->getQuery(true);
                                            $cityq->select('id');
                                            $cityq->from('`#__iproperty_cities` AS `city`');
                                            //$cityq->join('inner', '`#__iproperty_agents` AS `ag` ON `map`.`user_id` = `ag`.`user_id`');
                                            $cityq->where('`city`.`title` = \''.$get_city.'\'');
                                            $db->setQuery($cityq);
                                            //echo $cityq; exit;
                                            $cityres = $db->loadObject();
                                            $city_id = $cityres->id;
                                            if(!empty($city_id)){
                                                $city = $city_id;
                                            } else {
                                                $city = '';    
                                            }
                                    } else { $city = ''; } }
                                    if($field['SystemName'] == "BathsTotal") { if(!empty($listing[$field['SystemName']])) { $baths = $listing[$field['SystemName']]; } else { $baths = ''; } }
                                    if($field['SystemName'] == "Beds") { if(!empty($listing[$field['SystemName']])) { $beds = $listing[$field['SystemName']]; } else { $beds = ''; } } 
                                    if($field['SystemName'] == "GarageOrParkingSpaces") { if(!empty($listing[$field['SystemName']])) { $parking_space = $listing[$field['SystemName']]; } else { $parking_space = ''; } }
                                    if($field['SystemName'] == "GarageType") { if(!empty($listing[$field['SystemName']])) { $garage_type = $listing[$field['SystemName']]; } else { $garage_type = ''; } } 
                                    if($field['SystemName'] == "HOAFee") { if(!empty($listing[$field['SystemName']])) { $association_hoa_fee = $listing[$field['SystemName']]; } else { $association_hoa_fee = ''; } }
                                    if($field['SystemName'] == "HOAFee2") { if(!empty($listing[$field['SystemName']])) { $association_hoa2_fee = $listing[$field['SystemName']]; } else { $association_hoa2_fee = ''; } }
                                    if($field['SystemName'] == "HOAYN") { if(!empty($listing[$field['SystemName']])) { $association_hoa_fee_yes = $listing[$field['SystemName']]; } else { $association_hoa_fee_yes = ''; } }
                                    if($field['SystemName'] == "SchoolElementary") { if(!empty($listing[$field['SystemName']])) { $elementary_school = $listing[$field['SystemName']]; } else { $elementary_school = ''; } }
                                    if($field['SystemName'] == "SchoolHigh") { if(!empty($listing[$field['SystemName']])) { $high_school = $listing[$field['SystemName']]; } else { $high_school
                                     = ''; } }
                                    if($field['SystemName'] == "SchoolMiddle") { if(!empty($listing[$field['SystemName']])) { $middle_school = $listing[$field['SystemName']]; } else { $middle_school
                                     = ''; } }
                                    if($field['SystemName'] == "SqFtApproximateTotal") { if(!empty($listing[$field['SystemName']])) { $middle_school = $listing[$field['SystemName']]; } else { $middle_school
                                     = ''; } }
                                    if($field['SystemName'] == "Subdivision") { if(!empty($listing[$field['SystemName']])) { $subdivision = $listing[$field['SystemName']]; } else { $subdivision
                                     = ''; } }
                                    if($field['SystemName'] == "PropertyType") { if(!empty($listing[$field['SystemName']])) { $property_type = $listing[$field['SystemName']]; } else { $property_type
                                     = ''; } }
                                    if($field['SystemName'] == "YearBuilt") { if(!empty($listing[$field['SystemName']])) { $yearbuilt = $listing[$field['SystemName']]; } else { $yearbuilt
                                     = ''; } }
                                    if($field['SystemName'] == "FireplacesTotal") { if(!empty($listing[$field['SystemName']])) { $fireplace = $listing[$field['SystemName']]; } else { $fireplace
                                     = ''; } }
                                    if($field['SystemName'] == "Levels") { if(!empty($listing[$field['SystemName']])) { $interior_levels = $listing[$field['SystemName']]; } else { $interior_levels
                                     = ''; } }
                                    if($field['SystemName'] == "LotSize") { if(!empty($listing[$field['SystemName']])) { $lotsize = $listing[$field['SystemName']]; } else { $lotsize
                                     = ''; } }
                                    if($field['SystemName'] == "Style") { if(!empty($listing[$field['SystemName']])) { $building_style = $listing[$field['SystemName']]; } else { $building_style
                                     = ''; } }
                                    if($field['SystemName'] == "Area") { if(!empty($listing[$field['SystemName']])) { $property_area = $listing[$field['SystemName']]; } else { $property_area
                                     = ''; } }
                                    if($field['SystemName'] == "County") { if(!empty($listing[$field['SystemName']])) { $county = $listing[$field['SystemName']]; } else { $county
                                     = ''; } }
                                    if($field['SystemName'] == "DateTimeModified") { if(!empty($listing[$field['SystemName']])) { $created_date = $listing[$field['SystemName']]; } else { $created_date
                                     = ''; } }
                                    if($field['SystemName'] == "ListAgentCellPhone") { if(!empty($listing[$field['SystemName']])) { $agent_phone_num = $listing[$field['SystemName']]; } else { $agent_phone_num
                                     = ''; } }
                                    if($field['SystemName'] == "ListAgentEmail") { if(!empty($listing[$field['SystemName']])) { $agent_email = $listing[$field['SystemName']]; } else { $agent_email
                                     = ''; } }
                                    if($field['SystemName'] == "ListAgentID") { if(!empty($listing[$field['SystemName']])) { $agentid = $listing[$field['SystemName']]; } else { $agentid
                                     = ''; } }
                                    if($field['SystemName'] == "ListAgentFullName") { if(!empty($listing[$field['SystemName']])) { $listing_member_name = $listing[$field['SystemName']]; } else { $listing_member_name
                                     = ''; } }
                                    if($field['SystemName'] == "ListOfficeID") { if(!empty($listing[$field['SystemName']])) { $listing_office_shortid = $listing[$field['SystemName']]; } else { $listing_office_shortid
                                     = ''; } }
                                    if($field['SystemName'] == "ListOfficeName") { if(!empty($listing[$field['SystemName']])) { $listing_office_name = $listing[$field['SystemName']]; } else { $listing_office_name
                                     = ''; } }
                                    if($field['SystemName'] == "LegalDescription") { if(!empty($listing[$field['SystemName']])) { $description = $listing[$field['SystemName']]; } else { $description
                                     = ''; } }
                                    if($field['SystemName'] == "MapCoordinate") { if(!empty($listing[$field['SystemName']])) { $map_code = $listing[$field['SystemName']]; } else { $map_code
                                     = ''; } }
                                    if($field['SystemName'] == "MapColumn") { if(!empty($listing[$field['SystemName']])) { $map_column = $listing[$field['SystemName']]; } else { $map_column
                                     = ''; } }
                                    if($field['SystemName'] == "MapPage") { if(!empty($listing[$field['SystemName']])) { $map_page = $listing[$field['SystemName']]; } else { $map_page
                                     = ''; } }
                                    if($field['SystemName'] == "MapRow") { if(!empty($listing[$field['SystemName']])) { $map_row = $listing[$field['SystemName']]; } else { $map_row
                                     = ''; } }
                                    if($field['SystemName'] == "MLSNumber") { if(!empty($listing[$field['SystemName']])) { $mls_id = $listing[$field['SystemName']]; } else { $mls_id
                                     = ''; } }
                                    if($field['SystemName'] == "PhotosCount") { if(!empty($listing[$field['SystemName']])) { $picture_count = $listing[$field['SystemName']]; } else { $picture_count
                                     = ''; } }
                                    if($field['SystemName'] == "PriceType") { if(!empty($listing[$field['SystemName']])) { $price_type = $listing[$field['SystemName']]; } else { $price_type
                                     = ''; } }
                                    if($field['SystemName'] == "RemarksPublic") { if(!empty($listing[$field['SystemName']])) { $public_remark = $listing[$field['SystemName']]; } else { $public_remark
                                     = ''; } }
                                    if($field['SystemName'] == "StreetName") { if(!empty($listing[$field['SystemName']])) { $street = $listing[$field['SystemName']]; } else { $street
                                     = ''; } }
                                    if($field['SystemName'] == "FullStreetAddress") { if(!empty($listing[$field['SystemName']])) { $street2 = $listing[$field['SystemName']]; } else { $street2
                                     = ''; } }
                                    if($field['SystemName'] == "StreetNumber") { if(!empty($listing[$field['SystemName']])) { $street_num = $listing[$field['SystemName']]; } else { $street_num
                                     = ''; } }
                                    if($field['SystemName'] == "StreetDirSuffix") { if(!empty($listing[$field['SystemName']])) { $street_suffix = $listing[$field['SystemName']]; } else { $street_suffix
                                     = ''; } }
                                    if($field['SystemName'] == "ZipCode") { if(!empty($listing[$field['SystemName']])) { $postcode = $listing[$field['SystemName']]; } else { $postcode
                                     = ''; } }
                                    if($field['SystemName'] == "Zoning") { if(!empty($listing[$field['SystemName']])) { $zoning = $listing[$field['SystemName']]; } else { $zoning
                                     = ''; } }
                                    if($field['SystemName'] == "PriceList") { if(!empty($listing[$field['SystemName']])) { $price2 = $listing[$field['SystemName']]; } else { $price2
                                     = ''; } }
                                    if($field['SystemName'] == "PropertyType") { if(!empty($listing[$field['SystemName']])) { $dwelling_type = $listing[$field['SystemName']]; } else { $dwelling_type
                                     = ''; } }

                                     //amionities
                                    if($field['SystemName'] == "CoolingDescription") { if(!empty($listing[$field['SystemName']])) { $ami = $listing[$field['SystemName']]; } else { $ami
                                     = ''; } }
                                    if($field['SystemName'] == "DiningRoomFeatures") { if(!empty($listing[$field['SystemName']])) { $ami1 = $listing[$field['SystemName']]; } else { $ami1
                                     = ''; } }
                                    if($field['SystemName'] == "ExteriorDescription") { if(!empty($listing[$field['SystemName']])) { $ami2 = $listing[$field['SystemName']]; } else { $ami2
                                     = ''; } }
                                    if($field['SystemName'] == "ExteriorFeatures") { if(!empty($listing[$field['SystemName']])) { $ami3 = $listing[$field['SystemName']]; } else { $ami3
                                     = ''; } }
                                    if($field['SystemName'] == "HeatingDescription") { if(!empty($listing[$field['SystemName']])) { $ami4 = $listing[$field['SystemName']]; } else { $ami4
                                     = ''; } }
                                    if($field['SystemName'] == "InteriorFeatures") { if(!empty($listing[$field['SystemName']])) { $ami5 = $listing[$field['SystemName']]; } else { $ami5
                                     = ''; } }
                                    if($field['SystemName'] == "KitchenAppliances") { if(!empty($listing[$field['SystemName']])) { $ami6 = $listing[$field['SystemName']]; } else { $ami6
                                     = ''; } }
                                    if($field['SystemName'] == "EnergyEfficiencyFeatures") { if(!empty($listing[$field['SystemName']])) { $ami7 = $listing[$field['SystemName']]; } else { $ami7
                                     = ''; } }

                                }
                                    //Insert Property code from rets -> Oregon//
                                    $db = JFactory::getDbo();
                                    $columns = array('mls_id','int_list_id','latitude','longitude','created_by','locstate','city','baths','beds','parking_space','garage_type','association_hoa_fee','association_hoa2_fee','association_hoa_fee_yes','elementary_school','high_school','middle_school','sqft','subdivision','property_type','yearbuilt','fireplace','interior_levels','lotsize','building_style','property_area','county','created','modified', 'publish_up','agent_phone_num','agent_email','agentid','listing_member_name','listing_office_shortid','listing_office_name','description','map_code','access','country','map_column','map_page','map_row','picture_count','price_type','public_remark','street','street2','street_num','street_suffix','postcode','zoning','price2','dwelling_type','from_rets');
                                //echo $columns;exit;
                                    $values = array($db->quote($mls_id),$db->quote($agentid),$db->quote($latitude),$db->quote($longitude),785,3962,$db->quote($city),$db->quote($baths),$db->quote($beds),$db->quote($parking_space),$db->quote($garage_type),$db->quote($association_hoa_fee),$db->quote($association_hoa2_fee),$db->quote($association_hoa_fee_yes),$db->quote($elementary_school),$db->quote($high_school),$db->quote($middle_school),$db->quote($sqft),$db->quote($subdivision),$db->quote($property_type),$db->quote($yearbuilt),$db->quote($fireplace),$db->quote($interior_levels),$db->quote($lotsize),$db->quote($building_style),$db->quote($property_area),$db->quote($county),$db->quote($created_date),$db->quote($created_date),$db->quote($created_date),$db->quote($agent_phone_num),$db->quote($agent_email),$db->quote($agentid),$db->quote($listing_member_name),$db->quote($listing_office_shortid),$db->quote($listing_office_name),$db->quote($description),$db->quote($map_code),1,231,$db->quote($map_column),$db->quote($map_page),$db->quote($map_row),$db->quote($picture_count),$db->quote($price_type),$db->quote($public_remark),$db->quote($street),$db->quote($street2),$db->quote($street_num),$db->quote($street_suffix),$db->quote($postcode),$db->quote($zoning),$db->quote($price2),$db->quote($dwelling_type),1);

                                //custom viral
                            $db = JFactory::getDbo(); 
                            $se = $db->getQuery(true);
                            $se
                            ->select(array('DISTINCT id'))
                            ->from($db->quoteName('#__iproperty'))
                            ->where($db->quoteName('mls_id') . ' =' .$db->quote($mls_id))
                            ->where($db->quoteName('from_rets'). ' = '. 1)
                            ->where($db->quoteName('locstate'). ' = '. 3962)
                            ->order($db->quoteName('id') . ' DESC');
                            $db->setQuery($se);
                            
                            $selectresults = $db->loadObject();
                        //var_dump($mls_id);
                        
                            if(empty($selectresults)){

                                $insertPropertyTotal++;
                                $query = $db->getQuery(true);
                                            $query
                                                ->insert($db->quoteName('#__iproperty'))
                                                ->columns($db->quoteName($columns))
                                                ->values(implode(',', $values));
                                            $db->setQuery($query);
                                            $db->execute();
                                            $propId = $db->insertid();

                                    if($listing['ListingID']){
                                    $photos = $rets->GetObject($type['Resource'], 'Photo', $listing['ListingID'], '*', 1);
                                        if(count($photos) > 1){
                                            $ordering = 0;
                                            foreach ($photos as $photo)
                                                {
                                                $photo = (array)$photo;
                                                $data = array();
                                                
                                                //echo '<pre>';print_r($photo);echo '</pre>';
                                                $elemI = 0;
                                                foreach ($photo as $key => $value) {
                            
                                                $elemI++;
                                                $title = '';
                                                $file_ext = '';
                                                $path = '';
                                                $fname = '';
                                                if($elemI == 5){
                                                    //echo '<pre>';var_dump(basename($value, ".").PHP_EOL);echo '</pre>';
                                                    $filenames = explode('.', basename($value, ".").PHP_EOL);
                                                    $fileI = 0;
                                                    foreach ($filenames as $filename) {
                                                        $fileI++;
                                                        if($fileI == count($filenames)){
                                                            $type = trim('.'.$filename);
                                                        } else {
                                                            $fname .= $filename; 
                                                        } 
                                                    }
                                                    $slashes = explode('/', $value);
                                                    $slashI = 0;
                                                    foreach ($slashes as $slash) {
                                                        $slashI++;
                                                        if($slashI < count($slashes)){
                                                            $path .= $slash.'/';    
                                                        } 
                                                    }
                                                } else if($elemI == 6){
                                                    $title = $value;
                                                }
                                                if(!empty($fname) && !empty($type) && !empty($path)){

                                                    $imgquery = $db->getQuery(true);
                                                    $imgcolumns = array('propid', 'title', 'fname', 'type', 'remote', 'path', 'owner', 'ordering', 'state');
                                                    $imgvalues = array($db->quote($propId), $db->quote($title), $db->quote($fname), $db->quote($type), 1, $db->quote($path), 785, $db->quote($ordering), 1);
                                                    $imgquery
                                                        ->insert($db->quoteName('#__iproperty_images'))
                                                        ->columns($db->quoteName($imgcolumns))
                                                        ->values(implode(',', $imgvalues));
                                                     
                                                    // Set the query using our newly populated query object and execute it.
                                                    $db->setQuery($imgquery);
                                                    //echo $imgquery."<br/><br/>";
                                                    $db->execute(); 
                                                    //break;  
                                                }
                                            }
                                            $ordering++;
                                        }
                                    }
                                    }
                                    
                                //custom viral end

                                    /*$photos = $rets->GetObject($type['Resource'], 'Photo', $listing['ListingID'], '*', 1);
                                    $path_parts = pathinfo($photos[0]['Location']);*/

                                /*echo $path_parts['dirname'], "\n<br/>";
                                echo $path_parts['basename'], "\n<br/>";
                                echo $path_parts['extension'], "\n<br/>";
                                echo $path_parts['filename'], "\n<br/>";*/ //get value from path

                                
                                

                                ///
                                        
                                    ///

                                            /*$query = $db->getQuery(true);
                                            $query
                                                ->insert($db->quoteName('#__iproperty'))
                                                ->columns($db->quoteName($columns))
                                                ->values(implode(',', $values));
                                            $db->setQuery($query);
                                            $db->execute();
                                            $propId = $db->insertid();*/
                                        //echo $propId;

                                        //image upload
                                            /*$imgquery = $db->getQuery(true);
                                            $imgcolumns = array('propid', 'title', 'fname', 'type', 'remote', 'path', 'owner', 'ordering', 'state');
                                            $imgvalues = array($db->quote($propId), $db->quote(''), $db->quote($path_parts['filename']),$db->quote(".".$path_parts['extension']), 1, $db->quote($path_parts['dirname']."/"), 785, $db->quote($ordering), 1);
                                            $imgquery
                                                ->insert($db->quoteName('#__iproperty_images'))
                                                ->columns($db->quoteName($imgcolumns))
                                                ->values(implode(',', $imgvalues));
                                             
                                            // Set the query using our newly populated query object and execute it.
                                            $db->setQuery($imgquery);
                                            $db->execute();
                                            $ordering++;*/

                                            $proamenities = array();
                                            array_push($proamenities, 0);
                                        
                                        //echo $property_cat; exit;
                                            $re7 = explode(',',$ami7);
                                            $re6 = explode(',',$ami6);
                                            $re5 = explode(',',$ami5);
                                            $re4 = explode(',',$ami4);
                                            $re3 = explode(',',$ami3);
                                            $re2 = explode(',',$ami2);
                                            $re1 = explode(',',$ami1);
                                            $re = array_merge($re1,$re2,$re3,$re4,$re5,$re6,$re7);
                                            $re[]=$ami;
                                            if(count($re) > 0){
                                                for ($i=0; $i < count($re); $i++) {
                                                    $ami = $db->getQuery(true);
                                                    $ami->select('id');
                                                    $ami->from('#__iproperty_amenities');
                                                    $ami->where($db->quoteName('title') . ' = '. $db->quote($re[$i]));
                                                    $db->setQuery($ami);
                                                    $ami_res = $db->loadObject();
                                                 
                                                    if(!empty($ami_res->id)) array_push($proamenities, $ami_res->id);
                                                }
                                            }

                                        //echo "<pre>"; print_r($proamenities);

                                            if(count($proamenities) > 0){

                                                foreach ($proamenities as $pro) {
                                                    
                                                    $midquery = $db->getQuery(true);
                                                    $midcolumns = array('prop_id' , 'cat_id' , 'amen_id');
                                                    $midvalues = array($db->quote($propId), $property_cat, $db->quote($pro));
                                                    $midquery
                                                        ->insert($db->quoteName('#__iproperty_propmid'))
                                                        ->columns($db->quoteName($midcolumns))
                                                        ->values(implode(',', $midvalues));
                                                    // Set the query using our newly populated query object and execute it.
                                                    $db->setQuery($midquery);
                                                    $db->execute();
                                                }

                                            } else {
                                                $midquery = $db->getQuery(true);
                                                $midcolumns = array('prop_id' , 'cat_id' , 'amen_id');
                                                $midvalues = array($db->quote($propId), $property_cat, 0);
                                                $midquery
                                                    ->insert($db->quoteName('#__iproperty_propmid'))
                                                    ->columns($db->quoteName($midcolumns))
                                                    ->values(implode(',', $midvalues));
                                                    //echo $midvalues;
                                                // Set the query using our newly populated query object and execute it.
                                                $db->setQuery($midquery);
                                                $db->execute();
                                            }
                                            $super = $db->getQuery(true);
                                            $super->select('id');
                                            $super->from('`#__user_usergroup_map` AS `map`');
                                            $super->join('inner', '`#__iproperty_agents` AS `ag` ON `map`.`user_id` = `ag`.`user_id`');
                                            $super->where('`map`.`group_id` = 8');
                                            $super->where('`ag`.`agent_type` = 1');
                                            $db->setQuery($super);
                                            $res = $db->loadObject();
                                            if(count($proamenities) > 0){
                                                $agquery = $db->getQuery(true);
                                                $agcolumns = array('prop_id' , 'agent_id' , 'agent_type');
                                                $agvalues = array($db->quote($propId), $res->id, 1);
                                                $agquery
                                                    ->insert($db->quoteName('#__iproperty_agentmid'))
                                                    ->columns($db->quoteName($agcolumns))
                                                    ->values(implode(',', $agvalues));
                                                // Set the query using our newly populated query object and execute it.
                                                $db->setQuery($agquery);
                                                $db->execute();
                                            }
                                        }
                                        }
                                    }
                    }
                }
            }
        }
        if($limit > 1){
            $updatedPropertyTotal = $limit - $insertPropertyTotal;
            $message =  $insertPropertyTotal.' Properties Inserted Successfully and '.$updatedPropertyTotal. ' Properties Updated Successfully ';
        } else {
            $message =  $limit.' Property to insert or update Successfully';
        }

        $application = JFactory::getApplication();
        $application->enqueueMessage($message);

        return true;
    }
    public function deleteOregonretsRecords($category=null){

        $check_cat = array('A','B','C','D','E','F');
        if(in_array($category,$check_cat)){ $cat = $category; } else { $cat = "";}

        $check_property_type = array('A'=>1,'B'=>2,'C'=>3,'D'=>4,'E'=>5,'F'=>6);
        $allowed = array($cat);
        $type = array_intersect_key($check_property_type, array_flip($allowed));
        $property_cat = $type[$cat];
        //echo $property_cat."viral";exit;
        //echo "<pre>"; print_r($selectresults);exit;
        $db = JFactory::getDbo(); 
        $query = $db->getQuery(true);
            $query
            ->select(array('DISTINCT a.id'))
            ->from($db->quoteName('#__iproperty', 'a'))
            ->join('INNER', $db->quoteName('#__iproperty_propmid', 'b') . ' ON (' . $db->quoteName('a.id') . ' = ' . $db->quoteName('b.prop_id') . ')')
            ->where($db->quoteName('b.cat_id') . ' =' .$db->quote($property_cat))
            ->where($db->quoteName('a.from_rets'). ' = '. 1)
            ->where($db->quoteName('a.locstate'). ' = '. 3962)
            ->order($db->quoteName('a.id') . ' DESC');
            $db->setQuery($query);
            $selectresults = $db->loadObjectList();
            //echo "<pre>"; print_r($selectresults); exit;
        //
        /*$db = JFactory::getDbo(); 

        $selectquery = $db->getQuery(true);
        $selectquery->select('id');
        $selectquery->from($db->quoteName('#__iproperty'));
        $selectquery->where($db->quoteName('from_rets') . ' = '. 1);
        $db->setQuery($selectquery);
        $selectresults = $db->loadObjectList();*/

        $selectIds = array();
        foreach ($selectresults as $sresult) {
            array_push($selectIds, $sresult->id);
        }

        if(count($selectIds) > 0){

            $selectIdsForWhere = implode(',', $selectIds);

            $delete_prop = $db->getQuery(true);
            $db->setQuery('DELETE FROM `#__iproperty` WHERE `id` IN ('.$selectIdsForWhere.')');
            $db->execute();
            
            $delete_propmid = $db->getQuery(true);
            $db->setQuery('DELETE FROM `#__iproperty_propmid` WHERE `prop_id` IN ('.$selectIdsForWhere.')');
            $db->execute();

            $delete_propmid = $db->getQuery(true);
            $db->setQuery('DELETE FROM `#__iproperty_images` WHERE `propid` IN ('.$selectIdsForWhere.')');
            $db->execute();

            $delete_propmid = $db->getQuery(true);
            $db->setQuery('DELETE FROM `#__iproperty_agentmid` WHERE `prop_id` IN ('.$selectIdsForWhere.')');
            //$db->execute();

        }

        $count = count($selectIds);
        if($count < 1){
            $message =  'No Properties to Delete';
        } else if(count($selectIds) > 1){
            $message =  $count.' Properties Deleted Successfully';
        } else {
            $message =  $count.' Property Deleted Successfully';
        }

        $application = JFactory::getApplication();
        $application->enqueueMessage($message);

        return true;
    }
   public function fetcharizonafromrets(){
        require_once("phrets.php");

        $limit = 5;
        $no_of_prop = $limit;
        $rets = new phRETS;
        $rets_login_url = "http://retsgw.flexmls.com:80/rets2_1/Login";
        $rets_username = "az.rets.usmr01b";
        $rets_password = "puces-uronic23";
        $connect = $rets->Connect($rets_login_url, $rets_username, $rets_password);
        if (!$connect) {
            print_r($rets->Error());
        } else {
            $query = "";
            if($_REQUEST['query']){
             $query = $_REQUEST['query'];
            }
            $types1 = $rets->GetMetadataTypes();

            //echo '<pre>';print_r($types1);echo '</pre>';exit;

            $cat = 'Residential';
            foreach ($types1 as $type) {
            if($type['Resource'] == "Property"){
                foreach ($type['Data'] as $data) {
                    $fields = $rets->GetMetadataTable($type['Resource'], $data['ClassName']);
                    if($data['VisibleName']==$cat){
                        $search = $rets->Search($type['Resource'],$data['ClassName'],$query, array("Limit" => $no_of_prop));
                        //echo '<pre>';print_r($search);echo '</pre>';
                        $count = 0;
                        if($rets->TotalRecordsFound() > $no_of_prop) {
                            //while ($count++ < $no_of_prop && $rets->TotalRecordsFound() > $no_of_prop) {
                            //echo $count.' verifying true<br>';
                            foreach ($search as $seaKey => $seaValue) {
                                //print_r($seaValue);
                                //echo $seaKey.' => '.$seaValue;
                                //echo '<br>';
                                foreach ($fields as $fieKey => $fieValue) {
                                    //echo $fieKey.' => '.$fieValue['SystemName'];
                                    //echo '<br>';
                                    if($fieValue['SystemName'] == "LIST_124") { if(!empty($seaValue[$fieValue['SystemName']])) { $assessor_book = $seaValue[$fieValue['SystemName']]; 
                                    echo $assessor_book;
                                } else { $assessor_book = ''; } }
                                }// field value
                            }// seavalue
                        }// total count while

                    }
                }
            }
            }


        }
   }
    
}
?>